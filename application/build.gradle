plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.apache.pdfbox:pdfbox:2.0.26'
    implementation 'jakarta.activation:jakarta.activation-api:2.1.0'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.0'
    implementation 'org.javassist:javassist:3.29.0-GA'
    implementation 'org.freemarker:freemarker:2.3.31'
    implementation 'com.thoughtworks.xstream:xstream:1.4.19'
    implementation 'com.google.flogger:flogger:0.7.4'
    implementation 'com.google.flogger:flogger-system-backend:0.7.4'
    implementation 'org.springframework.boot:spring-boot-starter'

    // detects system dark / light setting
    // https://github.com/Dansoftowner/jSystemThemeDetector
    implementation 'com.github.Dansoftowner:jSystemThemeDetector:3.6'

    // Theming
    // https://www.formdev.com/flatlaf/
    implementation 'com.formdev:flatlaf:3.2'

    // https://mvnrepository.com/artifact/org.freemarker/freemarker
    implementation 'org.freemarker:freemarker:2.3.31'

    // Database
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.3'
    implementation 'org.liquibase:liquibase-core:4.17.2'
    implementation 'org.liquibase.ext:liquibase-hibernate5:4.17.2'
    runtimeOnly 'org.postgresql:postgresql:42.5.1'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:4.7.0'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
    testImplementation 'org.easytesting:fest-swing-junit:1.2.1'
    testImplementation 'org.assertj:assertj-core:3.23.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.7.4'

    // https://mvnrepository.com/artifact/org.easymock/easymock
    testImplementation 'org.easymock:easymock:4.3'

    // Approval Tests
    testImplementation 'com.approvaltests:approvaltests:18.6.0'
}

group = 'de.heinerion'
version = '1.0.0'
description = 'InvoiceManager'
java.sourceCompatibility = JavaVersion.VERSION_16

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

configurations {
    liquibase
}

// some problems with hibernate envers: https://github.com/liquibase/liquibase-hibernate/issues/260
task liquibaseDiffChangeLog(type: JavaExec) {
    group = "liquibase"

    classpath sourceSets.main.runtimeClasspath
    classpath configurations.liquibase
    main = "liquibase.integration.commandline.Main"

    args "--defaultsFile=src/main/resources/liquibase-cli.properties"
    args "--changeLogFile=src/main/resources/db/changelog/${buildTimestamp()}.yaml"
    args "diffChangeLog"
}

task liquibaseinit(type: JavaExec) {
    group = "liquibase"

    classpath sourceSets.main.runtimeClasspath
    classpath configurations.liquibase
    main = "liquibase.integration.commandline.Main"

    args "--defaultsFile=src/main/resources/liquibase-cli.properties"
    args "initProject"
}

static def buildTimestamp() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd-HH-mm-ss')
    return formattedDate
}

test {
    testLogging { exceptionFormat = 'full' }
    systemProperty 'spring.profiles.active', 'test'
}