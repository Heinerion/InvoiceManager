/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'org.springframework.boot' version '2.6.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.pdfbox:pdfbox:2.0.24'
    implementation 'com.sun.xml.bind:jaxb-core:2.3.0.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'com.sun.xml.bind:jaxb-impl:2.3.1'
    implementation 'org.javassist:javassist:3.25.0-GA'
    implementation 'org.freemarker:freemarker:2.3.28'
    implementation 'com.thoughtworks.xstream:xstream:1.4.18'
    implementation 'com.google.flogger:flogger:0.7.2'
    implementation 'com.google.flogger:flogger-system-backend:0.7.2'
    implementation 'org.springframework.boot:spring-boot-starter'

    // https://mvnrepository.com/artifact/org.freemarker/freemarker
    implementation 'org.freemarker:freemarker:2.3.31'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.mockito:mockito-core:3.5.13'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.7'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.7'
    testImplementation 'org.easytesting:fest-swing-junit:1.2'
    testImplementation 'org.assertj:assertj-core:3.9.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // https://mvnrepository.com/artifact/org.easymock/easymock
    testImplementation group: 'org.easymock', name: 'easymock', version: '4.0.2'
}

group = 'de.heinerion'
version = '1.0.0'
description = 'InvoiceManager'
java.sourceCompatibility = JavaVersion.VERSION_16

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

//test {
// JUnit 5 will need some migration...
//    useJUnitPlatform()
//}